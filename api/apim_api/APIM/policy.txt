<policies>
    <inbound>
        <base />
        <set-backend-service backend-id="<Your AOAI APIM API>" />
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <!-- Capture the response body -->
        <set-variable name="responseBody" value="@(context.Response.Body.As<string>())" />
        <!-- Send the captured response body and extra header to the external URL -->
        <send-request mode="new" response-variable-name="response" timeout="60">
            <set-url>"<Your API URL whether deployed in Azure or running Ngrok.>"</set-url>
            <set-method>POST</set-method>
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-header name="system_prompt" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("system_prompt", "default-value"))</value>
            </set-header>
            <set-header name="user_prompt" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("user_prompt", "default-value"))</value>
            </set-header>
            <set-header name="time_asked" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("time_asked", "default-value"))</value>
            </set-header>
            <set-header name="deployment_model" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("deployment_model", "default-value"))</value>
            </set-header>
            <set-header name="name_model" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("name_model", "default-value"))</value>
            </set-header>
            <set-header name="version_model" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("version_model", "default-value"))</value>
            </set-header>
            <set-header name="region" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("region", "default-value"))</value>
            </set-header>
            <set-header name="project" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("project", "default-value"))</value>
            </set-header>
            <set-header name="database" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("database", "default-value"))</value>
            </set-header>
            <set-header name="retrieve" exists-action="override">
                <value>@(context.Request.Headers.GetValueOrDefault("retrieve", "default-value"))</value>
            </set-header>
            <set-body>@(context.Variables.GetValueOrDefault<string>("responseBody"))</set-body>
        </send-request>
        <!-- Return the original response body -->
        <return-response>
            <set-status code="200" reason="OK" />
            <set-header name="Content-Type" exists-action="override">
                <value>application/json</value>
            </set-header>
            <set-body>@(context.Variables.GetValueOrDefault<string>("responseBody"))</set-body>
        </return-response>
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>